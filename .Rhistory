mean_diff_CI <- function(n) {
diff_lengths <- numeric(k)
z <- qnorm((1 + gamma) / 2)
for (i in 1:k) {
x <- rbinom(n, 1, p)
ci1 <- CI_method1(x, z)
ci2 <- CI_method2(x, z)
diff_lengths[i] <- (ci2[2] - ci2[1]) - (ci1[2] - ci1[1])
}
return(mean(diff_lengths))
}
# Calcular diferenças médias para diferentes tamanhos de amostra
mean_diffs <- sapply(n_values, mean_diff_CI)
# Plotar gráfico das diferenças médias em função do tamanho da amostra
data <- data.frame(n_values, mean_diffs)
ggplot(data, aes(x = n_values, y = mean_diffs)) +
geom_point() +
geom_line() +
labs(x = "Tamanho da amostra", y = "Diferença média entre os intervalos de confiança") +
theme_minimal()
#Chat2
# Set the seed
set.seed(1627)
# Define the parameters
p <- 0.8
gamma <- 0.98
n_values <- c(30, 50, 100, 200, 300, 500, 1000)
k <- 3000
# Initialize a vector to store the average differences
mean_differences <- numeric(length(n_values))
# Perform the calculations for each value of n
for (i in 1:length(n_values)) {
n <- n_values[i]
differences <- numeric(k)
# Generate k samples of size n from a Bernoulli distribution
samples <- matrix(rbinom(k * n, size = 1, prob = p), nrow = k)
for (j in 1:k) {
sample <- samples[j, ]
# Calculate the sample mean
sample_mean <- mean(sample)
# Calculate the standard deviation using Method 1
std_dev1 <- sqrt(sample_mean * (1 - sample_mean) / n)
# Calculate the standard deviation using Method 2
std_dev2 <- sqrt((sample_mean * (1 - sample_mean)) / n)
# Calculate the confidence intervals using Method 1
z <- qnorm((1 + gamma) / 2)
lower1 <- sample_mean - z * std_dev1
upper1 <- sample_mean + z * std_dev1
# Calculate the confidence intervals using Method 2
lower2 <- sample_mean - z * std_dev2
upper2 <- sample_mean + z * std_dev2
# Calculate the difference in upper and lower bounds
difference <- (upper2 - lower2) - (upper1 - lower1)
differences[j] <- difference
}
# Calculate the average difference for this value of n
mean_differences[i] <- mean(differences)
}
# Plot the variation of mean differences with sample size
plot(n_values, mean_differences, type = "b", xlab = "Sample Size (n)", ylab = "Mean Differences",
main = "Comparison of Confidence Interval Methods", pch = 19)
#Bing Chilling
set.seed(1296)
n_values <- c(30, 50, 100, 200, 300, 500, 1000)
k <- 3000
p <- 0.3
gamma <- 0.97
z <- qnorm((1 + gamma) / 2)
mean_diffs <- numeric(length(n_values))
for (i in seq_along(n_values)) {
n <- n_values[i]
diffs <- numeric(k)
for (j in 1:k) {
sample_x <- rbinom(n, size = 1, prob = p)
sample_mean <- mean(sample_x)
se1 <- sqrt(p * (1 - p) / n)
se2 <- sqrt(sample_mean * (1 - sample_mean) / n)
ci1_length <- 2 * z * se1
ci2_length <- 2 * z * se2
diffs[j] <- ci2_length - ci1_length
}
mean_diffs[i] <- mean(diffs)
}
plot(n_values, mean_diffs, type = "b", xlab = "Sample size", ylab = "Mean difference in CI length")
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for New Zealand, year 2000, and variable EMP3
nz_data <- data %>%
filter(COU == "New Zealand" & TIME == 2000 & IND == "EMP3")
# Create bar chart
ggplot(nz_data, aes(x = AGE, y = Value, fill = SEX)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Unemployment rate in New Zealand by sex and age group in 2000",
x = "Age Group",
y = "Unemployment Rate (%)",
fill = "Sex")
library(ggplot2)
set.seed(1693)
n <- 101
location <- -3.2
scale <- 2
cauchy_sample <- rcauchy(n, location = location, scale = scale)
quantiles <- (1:n) / (n + 1)
cauchy_quantiles <- qcauchy(quantiles, location = location, scale = scale)
normal_mean <- 0.6
normal_variance <- 2.4
normal_sd <- sqrt(normal_variance)
normal_quantiles <- qnorm(quantiles, mean = normal_mean, sd = normal_sd)
ordered_sample <- sort(cauchy_sample)
data <- data.frame(ordered_sample, cauchy_quantiles, normal_quantiles)
ggplot(data) +
geom_point(aes(x = ordered_sample, y = cauchy_quantiles), color = "blue", alpha = 0.5) +
geom_point(aes(x = ordered_sample, y = normal_quantiles), color = "red", alpha = 0.5) +
geom_abline(intercept = 0, slope = 1, color = "black", linetype = "dashed") +
labs(x = "Valores gerados ordenados",
y = "Quantis de probabilidade",
title = "Gráfico de quantis",
subtitle = "Distribuição de Cauchy (azul) vs Distribuição Normal (vermelho)") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for New Zealand, year 2000, and variable EMP3
nz_data <- data %>%
filter(COU == "New Zealand" & TIME == 2000 & IND == "EMP3")
View(nz_data)
View(data)
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for New Zealand, year 2000, and variable EMP3
nz_data <- data %>%
filter(COU == "New Zealand")
View(nz_data)
View(data)
View(nz_data)
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
nz_data <- data %>%
filter(COU == "Sweden")
View(nz_data)
View(data)
View(data)
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$COU == "Sweden", ]
View(nz_data)
View(sw_data)
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden", data$TIME == "2010", data$IND == "EMP3",]
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden", data$TIME == "2010", data$IND == "EMP3"]
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden", ]
# Create bar chart
ggplot(sw_data, aes(x = AGE, y = Value, fill = SEX)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Unemployment rate in Sweden by sex and age group in 2000",
x = "Age Group",
y = "Unemployment Rate (%)",
fill = "Sex")
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden", ]
sw_data <- data$TIME == "2010", ]
sw_data <- data$IND == "EMP3", ]
# Create bar chart
ggplot(sw_data, aes(x = AGE, y = Value, fill = SEX)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Unemployment rate in Sweden by sex and age group in 2000",
x = "Age Group",
y = "Unemployment Rate (%)",
fill = "Sex")
View(sw_data)
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden", ]
sw_data <- data[data$TIME == "2010", ]
sw_data <- data[data$IND == "EMP3", ]
View(nz_data)
View(sw_data)
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden", ]
sw_data <- sw_data[data$TIME == "2010", ]
sw_data <- sw_data[data$IND == "EMP3", ]
View(sw_data)
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden" & data$TIME == "2010" & data$IND == "EMP3", ]
``
# Create bar chart
ggplot(sw_data, aes(x = AGE, y = Value, fill = SEX)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Unemployment rate in Sweden by sex and age group in 2000",
x = "Age Group",
y = "Unemployment Rate (%)",
fill = "Sex")
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden" & data$TIME == "2010" & data$IND == "EMP3", ]
# Create bar chart
ggplot(sw_data, aes(x = AGE, y = Value, fill = SEX)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Unemployment rate in Sweden by sex and age group in 2000",
x = "Age Group",
y = "Unemployment Rate (%)",
fill = "Sex")
library(ggplot2)
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden" & data$TIME == "2010" & data$IND == "EMP3", ]
# Create bar chart
ggplot(sw_data, aes(x = AGE, y = Value, fill = SEX)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Unemployment rate in Sweden by sex and age group in 2000",
x = "Age Group",
y = "Unemployment Rate (%)",
fill = "Sex")
View(data)
View(data)
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden" & data$TIME == "2010" & data$IND == "EMP3" & data$Sex == "Men" || data$Sex == "Women", ]
# Create bar chart
ggplot(sw_data, aes(x = AGE, y = Value, fill = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Unemployment rate in Sweden by sex and age group in 2000",
x = "Age Group",
y = "Unemployment Rate (%)",
fill = "Sex")
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden" & data$TIME == "2010" & data$IND == "EMP3" & (data$Sex == "Men" || data$Sex == "Women"), ]
# Create bar chart
ggplot(sw_data, aes(x = AGE, y = Value, fill = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Unemployment rate in Sweden by sex and age group in 2000",
x = "Age Group",
y = "Unemployment Rate (%)",
fill = "Sex")
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden" & data$TIME == "2010" & data$IND == "EMP3" & (data$Sex == "Men" | data$Sex == "Women"), ]
# Create bar chart
ggplot(sw_data, aes(x = AGE, y = Value, fill = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Unemployment rate in Sweden by sex and age group in 2000",
x = "Age Group",
y = "Unemployment Rate (%)",
fill = "Sex")
View(data)
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden" & data$TIME == "2010" & data$IND == "EMP3" & (data$Sex == "Men" | data$Sex == "Women") & (data$Age.Group == "15–24" | data$Age.Group == "25–54"| data$Age.Group == "55–64"), ]
# Create bar chart
ggplot(sw_data, aes(x = Age.Group, y = Value, fill = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Unemployment rate in Sweden by sex and age group in 2000",
x = "Age Group",
y = "Unemployment Rate (%)",
fill = "Sex")
library(ggplot2)
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP3
sw_data <- data[data$Country == "Sweden" & data$TIME == "2010" & data$IND == "EMP3" & (data$Sex == "Men" | data$Sex == "Women") & (data$Age.Group == "15–24" | data$Age.Group == "25–54"| data$Age.Group == "55–64"), ]
# Create bar chart
ggplot(sw_data, aes(x = Age.Group, y = Value, fill = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Unemployment rate in Sweden by sex and age group in 2000",
x = "Age Group",
y = "Unemployment Rate (%)",
fill = "Sex")
View(sw_data)
View(data)
library(ggplot2)
library(dplyr)
# Load data
data <- read.delim("GENDER_EMP_19032023152556091.txt", sep = "\t")
# Filter data for Sweden, year 2000, and variable EMP
sw_data <- data[data$Country == "Sweden" & data$TIME == "2010" & data$IND == "EMP3" & (data$Sex == "Men" | data$Sex == "Women") & (data$AGE == "1524" | data$AGE == "2554"| data$AGE == "5564"), ]
# Create bar chart
ggplot(sw_data, aes(x = Age.Group, y = Value, fill = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Unemployment rate in Sweden by sex and age group in 2000",
x = "Age Group",
y = "Unemployment Rate (%)",
fill = "Sex")
library(ggplot2)
library(ggplot2)
set.seed(1693)
n <- 101
location <- -3.2
scale <- 2
cauchy_sample <- rcauchy(n, location = location, scale = scale)
quantiles <- (1:n) / (n + 1)
cauchy_quantiles <- qcauchy(quantiles, location = location, scale = scale)
normal_mean <- 0.6
normal_variance <- 2.4
normal_sd <- sqrt(normal_variance)
normal_quantiles <- qnorm(quantiles, mean = normal_mean, sd = normal_sd)
ordered_sample <- sort(cauchy_sample)
data <- data.frame(ordered_sample, cauchy_quantiles, normal_quantiles)
ggplot(data) +
geom_point(aes(x = ordered_sample, y = cauchy_quantiles), color = "blue", alpha = 0.5) +
geom_point(aes(x = ordered_sample, y = normal_quantiles), color = "red", alpha = 0.5) +
geom_abline(intercept = 0, slope = 1, color = "black", linetype = "dashed") +
labs(x = "Valores gerados ordenados",
y = "Quantis de probabilidade",
title = "Gráfico de quantis",
subtitle = "Distribuição de Cauchy (azul) vs Distribuição Normal (vermelho)") +
theme_minimal()
#Bing Chilling
set.seed(1637)
n <- 141
x <- sort(rcauchy(n, location = 1.2, scale = 1.6))
p <- (1:n)/(n + 1)
y <- qcauchy(p, location = 1.2, scale = 1.6)
z <- qnorm(p, mean = 2.2, sd = sqrt(3.6))
plot(x, y, col = "red", xlab = "Generated values", ylab = "Quantiles", main = "Cauchy vs Normal")
points(x, z, col = "blue")
abline(0, 1)
legend("topleft", legend = c("Cauchy", "Normal"), col = c("red", "blue"), pch = 1)
# 1. Read the data file in R and remove all records referring to South Africa (incomplete data).
data <- read.csv("TIME_USE_24092022.csv", sep = ",")
data <- subset(data, País != "África do Sul")
# 2. Submit a PDF file with a single A4 page, which includes, in a single graph, two boxplots that allow comparing the average daily times recorded for Men in two different occupations: Personal care and Unpaid work.
library(ggplot2)
# Filter data for Men and the two occupations
data_men <- subset(data, Sexo == "Homens" & (Ocupação == "Cuidados pessoais" | Ocupação == "Trabalho não remunerado"))
# Create boxplots
p <- ggplot(data_men, aes(x = Ocupação, y = Tempo)) +
geom_boxplot() +
facet_wrap(~ Ocupação) +
ggtitle("Comparing average daily times for Men in Personal Care and Unpaid Work")
# Save plot as PDF
ggsave("boxplots.pdf", plot = p)
# 1. Read the data file in R and remove all records referring to South Africa (incomplete data).
data <- read.csv("TIME_USE_24092022.csv", sep = ",")
data <- subset(data, País != "África do Sul")
# 2. In a single graph, create two boxplots that allow comparing the average daily times recorded for Men in two different occupations: Personal care and Unpaid work.
library(ggplot2)
# Filter data for Men and the two occupations
data_men <- subset(data, Sexo == "Homens" & (Ocupação == "Cuidados pessoais" | Ocupação == "Trabalho não remunerado"))
# Create boxplots
p <- ggplot(data_men, aes(x = Ocupação, y = Tempo)) +
geom_boxplot() +
facet_wrap(~ Ocupação) +
ggtitle("Comparing average daily times for Men in Personal Care and Unpaid Work")
# Display plot
print(p)
View(data)
View(data_men)
# 1. Read the data file in R and remove all records referring to South Africa (incomplete data).
data <- read.csv("TIME_USE_24092022.csv", sep = ",")
data <- subset(data, País != "África do Sul")
# 2. In a single graph, create two boxplots that allow comparing the average daily times recorded for Men in two different occupations: Personal care and Unpaid work.
library(ggplot2)
# Filter data for Men and the two occupations
data_men <- subset(data, Sexo == "Homens" & (Ocupação == "Cuidados pessoais" | Ocupação == "Trabalho não remunerado"))
# Create boxplots
p <- ggplot(data_men, aes(x = Ocupação, y = Tempo)) +
geom_boxplot() +
#facet_wrap(~ Ocupação) +
ggtitle("Comparing average daily times for Men in Personal Care and Unpaid Work")
# Display plot
print(p)
# Load necessary libraries
library(readxl)
# Read data from econ.xlsx file
data <- read_excel("econ.xlsx")
# Load necessary libraries
library(readxl)
# Read data from econ.xlsx file
data <- read_excel("econ.xlsx")
# Select data for years greater than or equal to 1998
data <- data[data$year >= 1998,]
# Standardize the gcp and ndesemp variables
data$gcp_z <- scale(data$gcp)
data$ndesemp_z <- scale(data$ndesemp)
# Plot the standardized variables using base R graphics
plot(data$year, data$gcp_z, type = "l", col = "red", xlab = "Year", ylab = "Standardized Value")
lines(data$year, data$ndesemp_z, col = "blue")
legend("topleft", legend = c("gcp", "ndesemp"), col = c("red", "blue"), lty = 1)
install.packages("readxl")
install.packages("readxl")
# Load necessary libraries
library(readxl)
# Read data from econ.xlsx file
data <- read_excel("econ.xlsx")
# Select data for years greater than or equal to 1998
data <- data[data$year >= 1998,]
library(ggplot2)
library(readxl)
# Read the data from the econ.xlsx file
data <- read_excel("econ.xlsx")
# Select the data to use
data <- subset(data, tempo >= as.Date("1998-01-01"))
# Transform the data associated with each variable
data$gcp_z <- (data$gcp - mean(data$gcp)) / sd(data$gcp)
data$ndesemp_z <- (data$ndesemp - mean(data$ndesemp)) / sd(data$ndesemp)
# Create a plot using ggplot
ggplot(data, aes(x = tempo)) +
geom_line(aes(y = gcp_z, color = "gcp")) +
geom_line(aes(y = ndesemp_z, color = "ndesemp")) +
scale_color_manual(name = "Variable", values = c("gcp" = "blue", "ndesemp" = "red")) +
labs(x = "Time", y = "Z-score") +
ggtitle("Evolution of gcp and ndesemp over time")
library(ggplot2)
library(readxl)
# Read the data from the econ.xlsx file
data <- read_excel("econ.xlsx")
# Select the data to use
data <- subset(data, tempo >= as.Date("01/01/1998"))
# Transform the data associated with each variable
data$gcp_z <- (data$gcp - mean(data$gcp)) / sd(data$gcp)
data$ndesemp_z <- (data$ndesemp - mean(data$ndesemp)) / sd(data$ndesemp)
# Create a plot using ggplot
ggplot(data, aes(x = tempo)) +
geom_line(aes(y = gcp_z, color = "gcp")) +
geom_line(aes(y = ndesemp_z, color = "ndesemp")) +
scale_color_manual(name = "Variable", values = c("gcp" = "blue", "ndesemp" = "red")) +
labs(x = "Time", y = "Z-score") +
ggtitle("Evolution of gcp and ndesemp over time")
library(ggplot2)
library(readxl)
# Read the data from the econ.xlsx file
data <- read_excel("econ.xlsx")
# Select the data to use
data <- subset(data, as.Date(tempo, format = "%d/%m/%Y") >= as.Date("01/01/1998"))
# Transform the data associated with each variable
data$gcp_z <- (data$gcp - mean(data$gcp)) / sd(data$gcp)
data$ndesemp_z <- (data$ndesemp - mean(data$ndesemp)) / sd(data$ndesemp)
# Create a plot using ggplot
ggplot(data, aes(x = tempo)) +
geom_line(aes(y = gcp_z, color = "gcp")) +
geom_line(aes(y = ndesemp_z, color = "ndesemp")) +
scale_color_manual(name = "Variable", values = c("gcp" = "blue", "ndesemp" = "red")) +
labs(x = "Time", y = "Z-score") +
ggtitle("Evolution of gcp and ndesemp over time")
library(ggplot2)
library(readxl)
# Read the data from the econ.xlsx file
data <- read_excel("econ.xlsx")
# Select the data to use
data <- subset(data, as.Date(tempo, format = "%d/%m/%Y") >= as.Date("1998-01-01"))
# Transform the data associated with each variable
data$gcp_z <- (data$gcp - mean(data$gcp)) / sd(data$gcp)
data$ndesemp_z <- (data$ndesemp - mean(data$ndesemp)) / sd(data$ndesemp)
# Create a plot using ggplot
ggplot(data, aes(x = tempo)) +
geom_line(aes(y = gcp_z, color = "gcp")) +
geom_line(aes(y = ndesemp_z, color = "ndesemp")) +
scale_color_manual(name = "Variable", values = c("gcp" = "blue", "ndesemp" = "red")) +
labs(x = "Time", y = "Z-score") +
ggtitle("Evolution of gcp and ndesemp over time")
View(data)
